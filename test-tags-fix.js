const { exec } = require('child_process');
const util = require('util');
const execAsync = util.promisify(exec);

async function testTagsFix() {
  console.log('üß™ TESTANDO CORRE√á√ÉO DAS TAGS...\n');

  try {
    // 1. Verificar se h√° v√≠deos no banco
    console.log('1Ô∏è‚É£ VERIFICANDO V√çDEOS NO BANCO:');
    const { stdout: videoCheck } = await execAsync('node -e "const { PrismaClient } = require(\'@prisma/client\'); async function check() { const prisma = new PrismaClient(); const count = await prisma.video.count(); console.log(\`V√≠deos: ${count}\`); await prisma.$disconnect(); } check();"');
    console.log('Resultado:', videoCheck.trim());

    // 2. Verificar se h√° tags no banco
    console.log('\n2Ô∏è‚É£ VERIFICANDO TAGS NO BANCO:');
    const { stdout: tagCheck } = await execAsync('node -e "const { PrismaClient } = require(\'@prisma/client\'); async function check() { const prisma = new PrismaClient(); const count = await prisma.tag.count(); console.log(\`Tags: ${count}\`); await prisma.$disconnect(); } check();"');
    console.log('Resultado:', tagCheck.trim());

    // 3. Testar cria√ß√£o de uma tag individual (simulando o c√≥digo corrigido)
    console.log('\n3Ô∏è‚É£ TESTANDO CRIA√á√ÉO DE TAG INDIVIDUAL:');
    try {
      const { stdout: tagCreateTest } = await execAsync('node -e "const { PrismaClient } = require(\'@prisma/client\'); async function test() { const prisma = new PrismaClient(); try { const tag = await prisma.tag.create({ data: { name: \'test_tag_\' + Date.now(), userId: \'cmf3rnb580000up10j3vqb8vv\', isAuto: true, category: \'geral\' } }); console.log(\'‚úÖ Tag criada com sucesso:\', tag.name); } catch (e) { console.log(\'‚ùå Erro ao criar tag:\', e.message); } await prisma.$disconnect(); } test();"');
      console.log('Resultado:', tagCreateTest.trim());
    } catch (error) {
      console.log('‚ùå Erro no teste de cria√ß√£o:', error.message);
    }

    // 4. Verificar se o servidor est√° rodando
    console.log('\n4Ô∏è‚É£ VERIFICANDO SERVIDOR:');
    try {
      const { stdout: serverCheck } = await execAsync('curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/api/videos');
      console.log('Status do servidor:', serverCheck === '401' ? '‚úÖ Rodando (401 - n√£o autorizado)' : serverCheck);
    } catch (error) {
      console.log('‚ùå Servidor n√£o est√° rodando');
    }

    console.log('\nüéâ TESTE CONCLU√çDO!');
    console.log('\nüí° PR√ìXIMOS PASSOS:');
    console.log('1. Execute uma nova importa√ß√£o do YouTube');
    console.log('2. Verifique se as tags s√£o criadas sem erro');
    console.log('3. Confirme se as tags s√£o associadas aos v√≠deos');

  } catch (error) {
    console.log('‚ùå ERRO GERAL NO TESTE:', error.message);
  }
}

testTagsFix();