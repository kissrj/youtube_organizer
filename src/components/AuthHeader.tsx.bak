'use client'

import { useSession, signIn, signOut } from 'next-auth/react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'
import { useEffect, useState } from 'react'
import ThemeToggle from '@/components/ui/ThemeToggle'

export function AuthHeader() {
  const { data: session, status } = useSession()
  const router = useRouter()
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)

  useEffect(() => {
    if (status === 'authenticated' && window.location.pathname === '/auth/signin') {
      router.push('/')
    }
  }, [status, router])

  if (status === 'loading') {
    return (
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <h1 className="text-2xl font-bold text-gray-900">
              YouTube Organizer
            </h1>
            <div className="text-sm text-gray-600">Loading…</div>
          </div>
        </div>
      </header>
    )
  }

  return (
    <header className="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center py-4">
          <div className="flex items-center">
            <Link href="/" className="text-2xl font-bold text-gray-900 hover:text-gray-700">
              YouTube Organizer
            </Link>
          </div>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center space-x-8">
            {session ? (
              <>
                <Link href="/" className="text-gray-700 hover:text-gray-900 transition-colors font-medium">
                  Dashboard
                </Link>
                <Link href="/playlists" className="text-gray-700 hover:text-gray-900 transition-colors font-medium">
                  Playlists
                </Link>
                <Link href="/videos" className="text-gray-700 hover:text-gray-900 transition-colors font-medium">
                  VÃ­deos
                </Link>
                <Link href="/categories" className="text-gray-700 hover:text-gray-900 transition-colors font-medium">
                  Categorias
                </Link>
                <Link href="/tags" className="text-gray-700 hover:text-gray-900 transition-colors font-medium">
                  Tags
                </Link>

                <div className="flex items-center space-x-3 ml-6 pl-6 border-l border-gray-300">
                  <ThemeToggle />
                  <div className="flex items-center space-x-2">
                    {session.user?.image && (
                      <img
                        src={session.user.image}
                        alt={session.user.name || 'User'}
                        className="w-8 h-8 rounded-full"
                      />
                    )}
                    <span className="text-sm text-gray-600 max-w-[120px] truncate">
                      {session.user?.name || session.user?.email}
                    </span>
                  </div>
                  <button
                    onClick={() => signOut({ callbackUrl: '/auth/signin' })}
                    className="px-3 py-1 text-sm text-gray-700 hover:text-gray-900 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                  >
                    Sair
                  </button>
                </div>
              </>
            ) : (
              <button
                onClick={() => signIn('google', { callbackUrl: '/' })}
                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center space-x-2 font-medium"
              >
                <span>Entrar com Google</span>
              </button>
            )}
          </nav>

          {/* Mobile menu button */}
          <div className="md:hidden">
            <button
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
              className="text-gray-700 hover:text-gray-900 focus:outline-none focus:text-gray-900"
            >
              <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                {isMobileMenuOpen ? (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                ) : (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                )}
              </svg>
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {session && isMobileMenuOpen && (
          <div className="md:hidden py-4 border-t border-gray-300">
            <nav className="flex flex-col space-y-3">
              <div className="pb-3 border-b border-gray-300">
                <ThemeToggle />
              </div>
              <Link href="/" className="text-gray-700 hover:text-gray-900 transition-colors font-medium py-2">
                Dashboard
              </Link>
              <Link href="/playlists" className="text-gray-700 hover:text-gray-900 transition-colors font-medium py-2">
                Playlists
              </Link>
              <Link href="/videos" className="text-gray-700 hover:text-gray-900 transition-colors font-medium py-2">
                VÃ­deos
              </Link>
              <Link href="/categories" className="text-gray-700 hover:text-gray-900 transition-colors font-medium py-2">
                Categorias
              </Link>
              <Link href="/tags" className="text-gray-700 hover:text-gray-900 transition-colors font-medium py-2">
                Tags
              </Link>
              
              <div className="flex items-center space-x-3 pt-4 border-t border-gray-300">
                <div className="flex items-center space-x-2">
                  {session.user?.image && (
                    <img
                      src={session.user.image}
                      alt={session.user.name || 'User'}
                      className="w-8 h-8 rounded-full"
                    />
                  )}
                  <span className="text-sm text-gray-600 max-w-[120px] truncate">
                    {session.user?.name || session.user?.email}
                  </span>
                </div>
                <button
                  onClick={() => signOut({ callbackUrl: '/auth/signin' })}
                  className="px-3 py-1 text-sm text-gray-700 hover:text-gray-900 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                >
                  Sair
                </button>
              </div>
            </nav>
          </div>
        )}
      </div>
    </header>
  )
}

